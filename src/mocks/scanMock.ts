export type CropType = 'rice' | 'durian';

export type ConfidenceLevel = 'high' | 'medium' | 'low';

export type ScanResult = {
  id: string;
  crop: CropType;
  conditionTh: string;
  conditionEn: string;
  confidence: ConfidenceLevel;
  confidenceTh: string;
  confidenceEn: string;
  stepsTh: string[];
  stepsEn: string[];
  ppeTh?: string;
  ppeEn?: string;
  ppeIcons?: string[];
};

export const MOCK_RESULTS: ScanResult[] = [
  // Rice diseases
  {
    id: 'rice_brown_spot',
    crop: 'rice',
    conditionTh: '‡πÉ‡∏ö‡∏à‡∏∏‡∏î‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•',
    conditionEn: 'Brown Spot',
    confidence: 'high',
    confidenceTh: '‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏°‡∏≤‡∏Å',
    confidenceEn: 'High',
    stepsTh: [
      '‡∏ï‡∏±‡∏î‡πÉ‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏ó‡∏¥‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏£‡πà‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢',
      '‡∏â‡∏µ‡∏î‡∏û‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô ‡∏Ñ‡∏≤‡∏£‡πå‡πÄ‡∏ö‡∏ô‡∏î‡∏≤‡∏ã‡∏¥‡∏°',
      '‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÉ‡∏ô‡πÅ‡∏õ‡∏•‡∏á'
    ],
    stepsEn: [
      'Remove infected leaves to reduce spread',
      'Apply fungicide like Carbendazim',
      'Improve field ventilation'
    ],
    ppeTh: '‡∏™‡∏ß‡∏°‡∏ñ‡∏∏‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏Ç‡∏ì‡∏∞‡∏â‡∏µ‡∏î‡∏û‡πà‡∏ô',
    ppeEn: 'Wear gloves and mask during spraying',
    ppeIcons: ['üß§', 'üò∑']
  },
  {
    id: 'rice_blast',
    crop: 'rice',
    conditionTh: '‡πÇ‡∏£‡∏Ñ‡πÑ‡∏´‡∏°‡πâ',
    conditionEn: 'Blast Disease',
    confidence: 'medium',
    confidenceTh: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á',
    confidenceEn: 'Medium',
    stepsTh: [
      '‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡∏™‡∏π‡∏á',
      '‡∏â‡∏µ‡∏î‡∏û‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤',
      '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î'
    ],
    stepsEn: [
      'Reduce watering during high humidity',
      'Apply fungicide treatment',
      'Monitor symptoms closely'
    ],
    ppeTh: '‡∏™‡∏ß‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡∏ì‡∏∞‡∏â‡∏µ‡∏î‡∏û‡πà‡∏ô',
    ppeEn: 'Wear protective equipment while spraying',
    ppeIcons: ['üß§', 'üò∑', 'ü•Ω']
  },
  {
    id: 'rice_n_deficiency',
    crop: 'rice',
    conditionTh: '‡∏Ç‡∏≤‡∏î‡∏ò‡∏≤‡∏ï‡∏∏‡πÑ‡∏ô‡πÇ‡∏ï‡∏£‡πÄ‡∏à‡∏ô',
    conditionEn: 'Nitrogen Deficiency',
    confidence: 'high',
    confidenceTh: '‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏°‡∏≤‡∏Å',
    confidenceEn: 'High',
    stepsTh: [
      '‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡πÑ‡∏ô‡πÇ‡∏ï‡∏£‡πÄ‡∏à‡∏ô‡∏ï‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥',
      '‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πã‡∏¢‡∏•‡∏∞‡∏•‡∏≤‡∏¢',
      '‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô 5-7 ‡∏ß‡∏±‡∏ô'
    ],
    stepsEn: [
      'Apply nitrogen fertilizer as recommended',
      'Water regularly to dissolve fertilizer',
      'Reassess symptoms in 5-7 days'
    ],
    ppeTh: '‡∏•‡πâ‡∏≤‡∏á‡∏°‡∏∑‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢',
    ppeEn: 'Wash hands after fertilizing',
    ppeIcons: ['üß§']
  },
  // Durian diseases
  {
    id: 'durian_anthracnose',
    crop: 'durian',
    conditionTh: '‡πÅ‡∏≠‡∏ô‡πÅ‡∏ó‡∏£‡∏Ñ‡πÇ‡∏ô‡∏™',
    conditionEn: 'Anthracnose',
    confidence: 'high',
    confidenceTh: '‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏°‡∏≤‡∏Å',
    confidenceEn: 'High',
    stepsTh: [
      '‡∏ï‡∏±‡∏î‡πÉ‡∏ö‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏ó‡∏¥‡πâ‡∏á',
      '‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏â‡∏µ‡∏î‡∏û‡πà‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ù‡∏ô‡∏ï‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏°‡πÅ‡∏£‡∏á',
      '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô 3-5 ‡∏ß‡∏±‡∏ô'
    ],
    stepsEn: [
      'Remove infected leaves and branches',
      'Avoid spraying during rain or strong wind',
      'Recheck in 3-5 days'
    ],
    ppeTh: '‡∏™‡∏ß‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡πÅ‡∏•‡∏∞‡∏ñ‡∏∏‡∏á‡∏°‡∏∑‡∏≠',
    ppeEn: 'Wear mask and gloves',
    ppeIcons: ['üò∑', 'üß§']
  },
  {
    id: 'durian_phytophthora',
    crop: 'durian',
    conditionTh: '‡πÇ‡∏£‡∏Ñ‡∏£‡∏≤‡∏Å‡πÄ‡∏ô‡πà‡∏≤',
    conditionEn: 'Root Rot',
    confidence: 'medium',
    confidenceTh: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á',
    confidenceEn: 'Medium',
    stepsTh: [
      '‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡πÉ‡∏ô‡πÅ‡∏õ‡∏•‡∏á',
      '‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤‡πÉ‡∏ô‡∏î‡∏¥‡∏ô',
      '‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏ä‡∏∑‡πâ‡∏ô'
    ],
    stepsEn: [
      'Improve field drainage',
      'Apply soil fungicide',
      'Reduce watering when soil is moist'
    ],
    ppeTh: '‡∏™‡∏ß‡∏°‡∏ñ‡∏∏‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ö‡∏π‡∏ó',
    ppeEn: 'Wear gloves and boots',
    ppeIcons: ['üß§', 'üë¢']
  },
  {
    id: 'durian_k_deficiency',
    crop: 'durian',
    conditionTh: '‡∏Ç‡∏≤‡∏î‡∏ò‡∏≤‡∏ï‡∏∏‡πÇ‡∏û‡πÅ‡∏ó‡∏™‡πÄ‡∏ã‡∏µ‡∏¢‡∏°',
    conditionEn: 'Potassium Deficiency',
    confidence: 'low',
    confidenceTh: '‡∏ô‡πâ‡∏≠‡∏¢',
    confidenceEn: 'Low',
    stepsTh: [
      '‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢‡πÇ‡∏û‡πÅ‡∏ó‡∏™‡πÄ‡∏ã‡∏µ‡∏¢‡∏°‡∏ï‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥',
      '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ pH ‡∏Ç‡∏≠‡∏á‡∏î‡∏¥‡∏ô',
      '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏Ç‡∏≠‡∏á‡πÉ‡∏ö‡πÉ‡∏´‡∏°‡πà'
    ],
    stepsEn: [
      'Apply potassium fertilizer as recommended',
      'Check soil pH levels',
      'Monitor new leaf growth'
    ],
    ppeTh: '‡∏•‡πâ‡∏≤‡∏á‡∏°‡∏∑‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢',
    ppeEn: 'Wash hands after fertilizing',
    ppeIcons: ['üß§']
  }
];

export const analyzeImageMock = async (file: File, crop?: CropType): Promise<ScanResult> => {
  // Simulate analysis delay (0.5-1s)
  const delay = Math.random() * 500 + 500;
  await new Promise(resolve => setTimeout(resolve, delay));
  
  // Filter results by crop if specified, otherwise random
  const availableResults = crop 
    ? MOCK_RESULTS.filter(result => result.crop === crop)
    : MOCK_RESULTS;
  
  // Return random result
  const randomIndex = Math.floor(Math.random() * availableResults.length);
  return availableResults[randomIndex];
};

export const getConfidenceColor = (confidence: ConfidenceLevel): string => {
  switch (confidence) {
    case 'high':
      return 'bg-green-100 text-green-800 border-green-200';
    case 'medium':
      return 'bg-yellow-100 text-yellow-800 border-yellow-200';
    case 'low':
      return 'bg-gray-100 text-gray-800 border-gray-200';
    default:
      return 'bg-gray-100 text-gray-800 border-gray-200';
  }
};

export const getCropIcon = (crop: CropType): string => {
  return crop === 'rice' ? 'üåæ' : 'ü•≠';
};
